{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortType","setSortType","isReversed","setIsReversed","visibleGoods","goods","sortField","reverse","copy","sort","curGood","nextGood","localeCompare","length","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SA8BhB,IAAMC,EAAgB,WAC3B,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAhCR,SACEC,EACAC,EACAC,GAEA,IAAMC,EAAI,YAAOH,GAoBjB,OAlBIC,GACFE,EAAKC,MAAK,SAACC,EAASC,GAClB,OAAQL,GACN,KAAKV,EACH,OAAOc,EAAQE,cAAcD,GAC/B,KAAKd,EACH,OAAOa,EAAQG,OAASF,EAASE,OAEnC,QACE,OAAO,MAKXN,GACFC,EAAKD,UAGAC,EAOcM,CAAiBnB,EAAiBK,EAAUE,GAOjE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMf,EAAYL,IAC3BqB,KAAK,SACLF,UAAWG,IACT,iBACA,CACE,WAAYlB,IAAaJ,IAN/B,iCAaA,wBACEoB,QAAS,kBAAMf,EAAYJ,IAC3BoB,KAAK,SACLF,UAAWG,IACT,oBACA,CACE,WAAYlB,IAAaH,IAN/B,4BAaA,wBACEmB,QAAS,kBAAMb,GAAeD,IAC9Be,KAAK,SACLF,UAAWG,IACT,mBACA,CACE,YAAahB,IANnB,sBAaEF,GAAYE,IACZ,wBACEc,QAjDI,WACZf,EAAY,IACZE,GAAc,IAgDNc,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACE,6BACGX,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAoBA,eCjHhCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.54d92483.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'aplhabet';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortField: string,\n  reverse: boolean,\n):string[] {\n  const copy = [...goods];\n\n  if (sortField) {\n    copy.sort((curGood, nextGood) => {\n      switch (sortField) {\n        case SORT_BY_ALPHABET:\n          return curGood.localeCompare(nextGood);\n        case SORT_BY_LENGTH:\n          return curGood.length - nextGood.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    copy.reverse();\n  }\n\n  return copy;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortType, isReversed);\n\n  const reset = () => {\n    setSortType('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortType(SORT_BY_ALPHABET)}\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            {\n              'is-light': sortType !== SORT_BY_ALPHABET,\n            },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortType(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            {\n              'is-light': sortType !== SORT_BY_LENGTH,\n            },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={cn(\n            'button is-danger',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}